name = "üõ†Ô∏è Describe Ingress"
description = <<-EOT
        **Action**: Describe the ingress.
        
        **Affects**: Nothing - this runbook makes no changes.
        EOT
environment_scope = "FromProjectLifecycles"

connectivity_policy {
    allow_deployments_to_no_targets = true
}

run_retention_policy {
    quantity_to_keep = 3
}

process {
    step "describe-deployment" {
        name = "Describe Ingress"
        properties = {
            Octopus.Action.TargetRoles = "octopub"
        }

        action "describe-ingress" {
            action_type = "Octopus.KubernetesRunScript"
            properties = {
                K8SInspectCreateArtifact = "False"
                K8SInspectKubectlVerb = "get"
                K8SInspectNames = "#{Kubernetes.Deployment.Name}*"
                K8SInspectResource = "deployment"
                Octopus.Action.KubernetesContainers.Namespace = "#{Octopub.Yaml.Cluster.Namespace}"
                Octopus.Action.Script.ScriptBody = <<-EOT
                    ingress=$(get_octopusvariable "Project.Ingress.Name")
                    kubectl describe ingress $ingress > $PWD/ingress.txt
                    
                    new_octopusartifact $PWD/ingress.txt ingress.txt
                    
                    cat $PWD/ingress.txt
                    EOT
                Octopus.Action.Script.ScriptSource = "Inline"
                Octopus.Action.Script.Syntax = "Bash"
                OctopusUseBundledTooling = "False"
            }
            worker_pool = "hosted-ubuntu"

            container {
                feed = "docker-hub"
                image = "octopuslabs/k8s-workertools"
            }
        }
    }
}